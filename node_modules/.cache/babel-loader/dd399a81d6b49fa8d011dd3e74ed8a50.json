{"ast":null,"code":"import _objectSpread from\"/Users/muthusankar/Desktop/alamo-tools-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/muthusankar/Desktop/alamo-tools-main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Card,Button}from'react-bootstrap';import{useStoreContext}from'../../utils/GlobalState';import{ADD_TO_CART,UPDATE_CART_QUANTITY}from'../../utils/actions';function Tool(item){var image=item.image,name=item.name,_id=item._id,price=item.price,quantity=item.quantity,description=item.description;var _useStoreContext=useStoreContext(),_useStoreContext2=_slicedToArray(_useStoreContext,2),state=_useStoreContext2[0],dispatch=_useStoreContext2[1];var cart=state.cart;var addToCart=function addToCart(){// find the cart item with the matching id\nvar itemInCart=cart.find(function(cartItem){return cartItem._id===_id;});// if there was a match, call UPDATE with a new purchase quantity\nif(itemInCart){dispatch({type:UPDATE_CART_QUANTITY,_id:_id,purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1});}else{dispatch({type:ADD_TO_CART,product:_objectSpread(_objectSpread({},item),{},{purchaseQuantity:1})});}};return/*#__PURE__*/React.createElement(Card,{style:{width:'18rem'}},/*#__PURE__*/React.createElement(Card.Img,{variant:\"top\",src:\"/images/\".concat(image)}),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,{class:\"category-names\"},name),/*#__PURE__*/React.createElement(Card.Text,null,description,\" \",/*#__PURE__*/React.createElement(\"br\",null),\" Price: \",price,\" \",/*#__PURE__*/React.createElement(\"br\",null),\" Quantity: \",quantity),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:addToCart},\"Add to Cart\")));};export default Tool;","map":{"version":3,"sources":["/Users/muthusankar/Desktop/alamo-tools-main/client/src/components/Tool/index.js"],"names":["React","Card","Button","useStoreContext","ADD_TO_CART","UPDATE_CART_QUANTITY","Tool","item","image","name","_id","price","quantity","description","state","dispatch","cart","addToCart","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product","width"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,iBAA7B,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,WAAT,CAAsBC,oBAAtB,KAAkD,qBAAlD,CAIA,QAASC,CAAAA,IAAT,CAAcC,IAAd,CAAoB,CAChB,GACIC,CAAAA,KADJ,CAOID,IAPJ,CACIC,KADJ,CAEIC,IAFJ,CAOIF,IAPJ,CAEIE,IAFJ,CAGIC,GAHJ,CAOIH,IAPJ,CAGIG,GAHJ,CAIIC,KAJJ,CAOIJ,IAPJ,CAIII,KAJJ,CAKIC,QALJ,CAOIL,IAPJ,CAKIK,QALJ,CAMIC,WANJ,CAOIN,IAPJ,CAMIM,WANJ,CASA,qBAA0BV,eAAe,EAAzC,sDAAOW,KAAP,sBAAcC,QAAd,sBAEA,GAAQC,CAAAA,IAAR,CAAiBF,KAAjB,CAAQE,IAAR,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB;AACA,GAAMC,CAAAA,UAAU,CAAGF,IAAI,CAACG,IAAL,CAAU,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACV,GAAT,GAAiBA,GAA/B,EAAV,CAAnB,CAEA;AACA,GAAIQ,UAAJ,CAAgB,CACdH,QAAQ,CAAC,CACPM,IAAI,CAAEhB,oBADC,CAEPK,GAAG,CAAEA,GAFE,CAGPY,gBAAgB,CAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,CAAwC,CAHnD,CAAD,CAAR,CAKD,CAND,IAMO,CACLP,QAAQ,CAAC,CACPM,IAAI,CAAEjB,WADC,CAEPoB,OAAO,gCAAOjB,IAAP,MAAae,gBAAgB,CAAE,CAA/B,EAFA,CAAD,CAAR,CAID,CACF,CAjBH,CAqBA,mBACI,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEG,KAAK,CAAE,OAAT,CAAb,eACI,oBAAC,IAAD,CAAM,GAAN,EAAU,OAAO,CAAC,KAAlB,CAAwB,GAAG,mBAAajB,KAAb,CAA3B,EADJ,cAEI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,EAAY,KAAK,CAAC,gBAAlB,EAAoCC,IAApC,CADJ,cAEI,oBAAC,IAAD,CAAM,IAAN,MACKI,WADL,kBACkB,8BADlB,YACiCF,KADjC,kBACwC,8BADxC,eAC0DC,QAD1D,CAFJ,cAKI,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAEK,SAAnC,gBALJ,CAFJ,CADJ,CAYH,EAED,cAAeX,CAAAA,IAAf","sourcesContent":["import React from \"react\";\nimport { Card, Button } from 'react-bootstrap';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\n\n\n\nfunction Tool(item) {\n    const {\n        image,\n        name,\n        _id,\n        price,\n        quantity,\n        description\n    } = item;\n\n    const [state, dispatch] = useStoreContext();\n\n    const { cart } = state\n\n    const addToCart = () => {\n        // find the cart item with the matching id\n        const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n      \n        // if there was a match, call UPDATE with a new purchase quantity\n        if (itemInCart) {\n          dispatch({\n            type: UPDATE_CART_QUANTITY,\n            _id: _id,\n            purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n          });\n        } else {\n          dispatch({\n            type: ADD_TO_CART,\n            product: { ...item, purchaseQuantity: 1 }\n          });\n        }\n      };\n\n\n\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={`/images/${image}`} />\n            <Card.Body>\n                <Card.Title class='category-names'>{name}</Card.Title>\n                <Card.Text>\n                    {description} <br /> Price: {price} <br /> Quantity: {quantity}\n                </Card.Text>\n                <Button variant=\"primary\" onClick={addToCart}>Add to Cart</Button>\n            </Card.Body>\n        </Card>\n    )\n};\n\nexport default Tool;"]},"metadata":{},"sourceType":"module"}